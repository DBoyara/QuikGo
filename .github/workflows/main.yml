name: Go Test

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - reopened
      - edited
      - synchronize

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.22', '1.23']

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install golangci-lint
        run: |
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.51.2

      - name: Run golangci-lint
        run: golangci-lint run --config ./.golangci.yml ./...
  
      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run gosec with config
        run: gosec -conf=./gosec.json ./...

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests with annotations
        run: |
          go test -v ./... 2>&1 | tee test-output.txt
          cat test-output.txt | grep 'FAIL:' | while read -r line; do
            echo "::error file=$(echo $line | awk '{print $2}'),line=$(echo $line | awk '{print $3}')::Test failed: $line"
          done
